/**

 * @author cramatsu
 * (¬¥ÔΩ°‚Ä¢ œâ ‚Ä¢ÔΩ°`) ‚ô°
 * @Date 13.05.2022

 */

import { Discord, Slash, SlashGroup } from 'discordx';
import { BaseCommandInteraction, MessageEmbed } from 'discord.js';
import { inject, injectable } from 'tsyringe';
import { kRedis } from '../tokens';
import Redis from 'ioredis';
import Guild from '../database/models/guild';
import { codeBlock } from '@discordjs/builders';

@Discord()
@SlashGroup({
	name: 'room',
})
@SlashGroup('room')
@injectable()
export class Room {
	public constructor(@inject(kRedis) public readonly redis: Redis) {}
	@Slash('init', {
		description: '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã',
	})
	async init(int: BaseCommandInteraction<'cached'>) {
		const createdCategory = await int.guild.channels.create('–ö–æ–º–Ω–∞—Ç—ã', {
			type: 'GUILD_CATEGORY',
		});

		const createdVoiceMover = await createdCategory.createChannel('‚ôø | –í–∫–∞—Ç–∏—Ç—å—Å—èÔ∏è', {
			type: 'GUILD_VOICE',
			bitrate: 8000,
		});

		const createdVoiceControl = await createdCategory.createChannel('üõ†Ô∏èÔ∏èÔ∏è', {
			type: 'GUILD_TEXT',
		});

		await Guild.create({
			id: int.guild.id,
			moveChannelId: createdVoiceMover.id,
			settingsChannelId: createdVoiceControl.id,
		});

		await int.reply({
			embeds: [
				new MessageEmbed()
					.setColor('BLURPLE')
					.setTitle('„ÉΩ(*„Éªœâ„Éª)Ôæâ')
					.addFields([
						{
							name: '> –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ',
							value: `<#${createdVoiceMover.id}>`,
							inline: true,
						},
						{
							name: '> –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',
							value: `<#${createdVoiceControl.id}>`,
							inline: true,
						},
					])
					.setDescription(
						codeBlock(
							'fix',
							'–ö–∞–Ω–∞–ª—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!\n–ï—Å–ª–∏ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ - –ø–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ –∏—Ö!',
						),
					),
			],
		});
	}

	@Slash('delete', {
		description: '–£–¥–∞–ª–∏—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã',
	})
	async delete(int: BaseCommandInteraction<'cached'>) {
		const guild = await Guild.findOne({
			where: {
				id: int.guild.id,
			},
		});

		// @ts-ignore
		await int.guild.channels.resolve(guild.moveChannelId).delete();
		// @ts-ignore
		await int.guild.channels.resolve(guild.settingsChannelId).delete();

		await int.reply('OK! B00mer');
	}
}
