/**

 * @author cramatsu
 * (¬¥ÔΩ°‚Ä¢ œâ ‚Ä¢ÔΩ°`) ‚ô°
 * @Date 13.05.2022

 */

import { Discord, Slash, SlashGroup } from 'discordx';
import { BaseCommandInteraction, MessageActionRow, MessageButton, MessageEmbed } from 'discord.js';
import { inject, injectable } from 'tsyringe';
import { kRedis } from '../tokens';
import Redis from 'ioredis';
import { codeBlock } from '@discordjs/builders';
import { keyspaces } from '../lib/util/keyspaces';

@Discord()
@SlashGroup({
	name: 'room',
})
@SlashGroup('room')
@injectable()
export class Room {
	public constructor(@inject(kRedis) public readonly redis: Redis) {}

	@Slash('init', {
		description: '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã',
	})
	async init(int: BaseCommandInteraction<'cached'>) {
		const createdCategory = await int.guild.channels.create('–ö–æ–º–Ω–∞—Ç—ã', {
			type: 'GUILD_CATEGORY',
		});

		const createdVoiceMover = await createdCategory.createChannel('‚ôø | –í–∫–∞—Ç–∏—Ç—å—Å—èÔ∏è', {
			type: 'GUILD_VOICE',
			bitrate: 8000,
		});

		const createdVoiceControl = await createdCategory.createChannel('üõ†Ô∏èÔ∏èÔ∏è', {
			type: 'GUILD_TEXT',
		});

		await this.redis.set(keyspaces.settingsChannel(int.guild.id), createdVoiceControl.id);
		await this.redis.set(keyspaces.moveChannel(int.guild.id), createdVoiceMover.id);

		await int.reply({
			embeds: [
				new MessageEmbed()
					.setColor('BLURPLE')
					.setTitle('„ÉΩ(*„Éªœâ„Éª)Ôæâ')
					.addFields([
						{
							name: '> –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ',
							value: `<#${createdVoiceMover.id}>`,
							inline: true,
						},
						{
							name: '> –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',
							value: `<#${createdVoiceControl.id}>`,
							inline: true,
						},
					])
					.setDescription(
						codeBlock(
							'fix',
							'–ö–∞–Ω–∞–ª—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!\n–ï—Å–ª–∏ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ - –ø–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ –∏—Ö!',
						),
					),
			],
		});

		const lockRoom = new MessageButton().setCustomId('room-lock').setEmoji('üîí').setStyle('SECONDARY');

		const setMaxRoomCapacity = new MessageButton()
			.setCustomId('room-max-capacity')
			.setEmoji('üôá')
			.setStyle('SECONDARY');

		const setRoomName = new MessageButton().setCustomId('room-name').setEmoji('üìù').setStyle('SECONDARY');

		const kickMember = new MessageButton().setCustomId('room-kick-member').setEmoji('üëä').setStyle('SECONDARY');

		await createdVoiceControl.send({
			embeds: [
				new MessageEmbed()
					.setTitle('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç–æ–π')
					.setDescription(
						`
						> –ó–∞–∫—Ä—ã—Ç—å/–û—Ç–∫—Ä—ã—Ç—å –∫–æ–º–Ω–∞—Ç—É - :lock:
						> –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ - :bow:
						> –í—ã–≥–Ω–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ - :punch:
						> –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã - :pencil: 
						`,
					)
					.setColor('BLURPLE'),
			],
			components: [new MessageActionRow().addComponents(lockRoom, setMaxRoomCapacity, kickMember, setRoomName)],
		});
	}

	@Slash('delete', {
		description: '–£–¥–∞–ª–∏—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã',
	})
	async delete(int: BaseCommandInteraction<'cached'>) {
		const moveChannel = await this.redis.get(keyspaces.moveChannel(int.guildId));
		const settingsChannel = await this.redis.get(keyspaces.settingsChannel(int.guildId));

		if (moveChannel) {
			await int.guild.channels.resolve(moveChannel)?.delete();
		}

		if (settingsChannel) {
			await int.guild.channels.resolve(settingsChannel)?.delete();
		}

		await this.redis.del(keyspaces.settingsChannel(int.guildId));
		await this.redis.del(keyspaces.moveChannel(int.guildId));

		await int.reply(codeBlock('fix', '–ì–æ—Ç–æ–≤–æ!'));
	}
}
